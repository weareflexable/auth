import React, { useState, useEffect } from "react";
import { useRouter } from "next/router";
import Head from "next/head";
import { toast } from "react-toastify";
import { updatePassword } from "../utils/auth";

const UpdatePassword = () => {
  const [password, setPassword] = useState("");
  const [retypedPassword, setRetypedPassword] = useState("");
  const [isSubmitting, setIsSubmitting] = useState(false);

  const router = useRouter();
  // todo: functions
  const handleUpdate = async (e) => {
    e.preventDefault();
    if (!password || !retypedPassword) {
      return toast.error("please fill all the fields");
    }
    // if password is too short
    if (password.toString().length < 7) {
      return toast.error("password must be at leas 7 chars");
    }
    // if passwords do not match
    if (password !== retypedPassword) {
      return toast.error("passwords do not match");
    }

    const { error } = await updatePassword(password);
    if (error) {
      toast.error(error.message);
    } else {
      setPassword("");
      setRetypedPassword("");
      toast.dark("Password updated successfully");
      router.push("/login");
    }
  };
  // todo: component
  return (
    <div className="bg-black min-h-screen flex items-start justify-center">
      <Head>
        <title>Flexable | Update Password</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/logos/logo_colored.png" />
      </Head>

      <div className="w-full max-w-sm">
        <div className="flex justify-center items-center mt-8 mb-20">
          <h1 className="text-5xl font-figtree text-white">Forgot Password</h1>
        </div>

        <form
          onSubmit={handleUpdate}
          className="bg-[#242525] shadow-md rounded px-8 pt-6 pb-8 mb-4"
        >
          <div className="mb-4">
            <label
              className="block text-gray-400 font-figtree text-sm font-bold mb-2"
              for="password"
            >
              Password
            </label>
            <input
              className="shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline"
              id="password"
              type="password"
              placeholder="Password"
              value={password}
              onChange={(e) => setPassword(e.target.value)}
            />
          </div>
          <div className="mb-4">
            <label
              className="block text-gray-400 font-figtree text-sm font-bold mb-2"
              for="password"
            >
              Password
            </label>
            <input
              className="shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline"
              id="confirm-password"
              type="password"
              placeholder="Confirm Password"
              value={retypedPassword}
              onChange={(e) => setRetypedPassword(e.target.value)}
            />
          </div>
          <div className="flex items-center justify-between">
            <button
              className="bg-[#1afaa6] text-black hover:bg-transparent border-2 hover:text-white border-[#1afaa6] font-bold py-2 px-4 rounded-3xl focus:outline-none focus:shadow-outline"
              type="submit"
              disabled={isSubmitting}
            >
              Update
            </button>
          </div>
        </form>
      </div>
    </div>
  );
};

export default UpdatePassword;
